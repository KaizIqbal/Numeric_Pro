
Algorithm For RUNGE-KUTTA SECOND ORDER FORMULA METHOD

          [FUNCTION fxy]
          function fxy[x,y]{
              return (dy/dx)
          }

[Step-1]  [Initialization]
          int i <- 1
          int count <- 1
          float x0,xn,y0,h,x_array[n],y_array[n],k1,k2

[Step-2]  [Get value Of x0,xn,h,y1]
          write(Enter x0 : )
          read(x0)
          write(Enter xn : )
          read(xn)
          write(Enter y0 : )
          read(y0)
          write(Enter h :)
          read(h)

[Step-3]  [Set initial Value To Array]
          x_array(i)<-x0
          y_array(i)<-y1

[Step-4]  [Find x0 to xn Values and Count It]
          for(i<-1 to x_array(i)<=xn){
              x_array(i+1) <- x_array(i)+h;
              count++;
          }

[Step-5]  [Find y_array Value To apply Runge-Kutta Second Order Formula]
          for(i<-1 to i<=count){
              /* Runge-Kutta Second Order Formula */
              k1 <- h*fxy[x_array(i),y_array(i)];
              k2 <- h*fxy[x_array(i)+((2*h)/3),y_array(i)+((2*k1)/3)];
              y_array(i+1) <- y_array(i)+(k1+(3*k2));
          }

[Step-6]  [Display]
          for(i<-1 to i<=count){
              write(x_array(i) y_array(i))
          }

[Step-7]  [Exit]
          End.
